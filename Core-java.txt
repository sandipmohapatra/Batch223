Features of java
-------------------------------------------
1)Java is object Oriented programming language.
2)Java is simpler than c and c++ as we don't have pointer concept,multiple Inheritance,operator overloading.
3)Java support multi-threading or multi-tasking.
4)we can develop web-application,network application,standalone application and also mobile application.
5)In java we have interface which support the concept of multiple inheritance.
6)In java we have constructor but no destructor.There is automatic garbage clearance.
7)Java is a secured language .we have 4 access specifier private,public,protected,default.
8)we have to save the by .java extention.
9)In java the class name and file should be same.
10)java is platform independent.It can execute in any o/s.When we compile the .java file it is converted to .class file.
.class file is in byte code.  
-----------------------------------------------------------------------------------------------------------------------
Data types
--------------------
1)byte - 1 byte
2)short -2 bytes
3)int -4bytes
4)long -8 bytes
5)float - 4 bytes
6)double -8 bytes
7)char - 2bytes
8)boolean - 1 bit
----------------------------------------
Derived datatype
---------------------
1)String
2)array
3)class
------------------------------------------------------
  Operator
---------------------
1)unary:-i++,++i,i--,--i;

2)binary
i)arithmatic operator:- +,-,*,/,%(modules/reminder)
ii)comparative operator:- <,>,<=,>=,==
iii)assignment :-=,!=
iv)bitwise :->>,<<
v)logical operator:-&&,||
3)ternary :- :,?
----------------------------------------------------------------------------
we have 4 access specifier private,public,protected,default
-----------------------------------------------------------------------------
1)private:- If we declare variable and methods as private we can access it within the class only.
2)public:-If we declare variable and methods as public we can access it within the class ,outside the class and outside the package.
3)protected:-If we declare variable and methods as protected we can access it within the class and also with in the child class.
4)default:- If we declare variable and methods as default we can access it within the class,out side the class but not outside the package.
------------------------------------------------------------------------------------------------------------------
Example-1
------------------------
package org.sandip;

public class First {

	public static void main(String[] args) {
		System.out.println("Welcome to java");
	}
}
--------------------------------------------------------------
example-2
-------------------
package org.sandip;

public class First {

	public static void main(String[] args) {
byte a=10;
short b=20;
int c=30;
long d=40;
float e=45.34f;
double f=67.44;
char g='a';
String h="apple";
System.out.println("the value of a is "+a);
System.out.println("the value of b is "+b);
System.out.println("the value of c is "+c);
System.out.println("the value of d is "+d);
System.out.println("the value of e is "+e);
System.out.println("the value of f is "+f);
System.out.println("the value of g is "+ g +"The value of h is "+h);
}
}
----------------------------------------------------------------------------------------------------------------------------------
example-3
---------------------
package org.sandip;

public class First {

	public static void main(String[] args) {
int a=10,b=20,c=a+b;
System.out.println("the sum  is "+c);
	}
}
----------------------------------------------------------------
example-4
-------------------
package org.sandip;
import java.util.*;
public class First {

	public static void main(String[] args) 
	{
Scanner ob=new Scanner(System.in);
System.out.println("Enter 2 nos");
int a=ob.nextInt();
int b=ob.nextInt();
int c=a+b;
System.out.println("the sum  is "+c);
	}
}
---------------------------------------------------------------------------
wap to enter 5 nos and find the sum and avg.
----------------------------------------------------------------------------
example-5
-------------------
package org.sandip;
import java.util.*;
public class First {

	public static void main(String[] args) 
	{
Scanner ob=new Scanner(System.in);
System.out.println("Enter 5 nos");
int a=ob.nextInt();
int b=ob.nextInt();
int c=ob.nextInt();
int d=ob.nextInt();
int e=ob.nextInt();
int sum=a+b+c+d+e;
int avg=sum/5;
System.out.println("the sum  is "+sum);
System.out.println("the avg  is "+avg);
	}
}
------------------------------------------------------------------------------
example-6
------------------
package org.sandip;
import java.util.*;
public class First {

	public static void main(String[] args) 
	{
Scanner ob=new Scanner(System.in);
System.out.println("Enter 2 nos");
int a=ob.nextInt();
int b=ob.nextInt();
if(a>b)
System.out.println("the greatest  is "+a);
else
System.out.println("the greatest  is "+b);
	}
}
--------------------------------------------------------
Example-7
-------------------
package org.sandip;
import java.util.*;
public class First {

	public static void main(String[] args) 
	{
Scanner ob=new Scanner(System.in);
System.out.println("Enter 3 nos");
int a=ob.nextInt();
int b=ob.nextInt();
int c=ob.nextInt();
if(a>b && a>c)
System.out.println("the greatest  is "+a);
else if(b>a && b>c)
System.out.println("the greatest  is "+b);
else
	System.out.println("the greatest  is "+c);
	
	}
}
-------------------------------------------------------------------------
Scanner ob=new Scanner(System.in);<---------taking input
System.out.println("Enter 2 nos");<----------to display


Scanner class we have methods to take input nextInt(),nextFloat(),nextByte()
we have to import java.util.*; package when we want to use scanner class.
------------------------------------
Example-8
------------------
package org.sandip;
import java.util.*;
public class First {

	public static void main(String[] args) 
	{
Scanner ob=new Scanner(System.in);
System.out.println("Enter 1 nos");
int a=ob.nextInt();
if(a%2==0)
System.out.println("the no is even");
else
	System.out.println("the no is  odd ");
	
	}
}
------------------------------------------------------------
wap to enter your age and find if your eligible to vote.
-------------------------------------------------------------------------
Example-9
-----------------------
package org.sandip;
import java.util.*;
public class First {

	public static void main(String[] args) 
	{
Scanner ob=new Scanner(System.in);
System.out.println("Enter your age");
int a=ob.nextInt();
if(a>=18)
System.out.println("your eligible to vote");
else
	System.out.println("your are not eligible to vote");
	
	}
}
------------------------------------------------------------------------
case and switch:-
In this we have to enter a value to the switch.The switch will jump to particular case ,execute it and then break.
----------------------------
example-10
----------------
package org.sandip;
import java.util.*;
public class First {

	public static void main(String[] args) 
	{
Scanner ob=new Scanner(System.in);
System.out.println("Enter a no");
int x=ob.nextInt();
switch(x)
{
case 1:System.out.println("one");
break;
case 2:System.out.println("two");
break;
case 3:System.out.println("three");
break;
case 4:System.out.println("four");
break;
case 5:System.out.println("five");
break;
default:System.out.println("wrong input");
}
}}
----------------------------------------------------------------
example-11
-----------------
package org.sandip;
import java.util.*;
public class First {

	public static void main(String[] args) 
	{
Scanner ob=new Scanner(System.in);
System.out.println("enter 2 nos");
int a=ob.nextInt();
int b=ob.nextInt();
System.out.println("Enter your choice 1.add,2.sub,3.mul,4.div");
int x=ob.nextInt();
switch(x)
{
case 1:System.out.println("The sum is "+(a+b));
break;
case 2:System.out.println("The subtraction is "+(a-b));
break;
case 3:System.out.println("The multiply is "+(a*b));
break;
case 4:System.out.println("The division is "+(a/b));
break;
default:System.out.println("wrong input");
}
}}
------------------------------------------------------------------------------
class and object:-
a class contains variables and methods.
With object we can access the variables and methods of a class.
An object is a reference pointer used for accessing the variables and methods of the class.
-----------------------------------------------
example-1
-----------------
package org.sandip;
import java.util.*;
public class First
{
int rollno;  //variables
String name,address;
void input()  //methods
{
	Scanner ob=new Scanner(System.in);
	System.out.println("Enter rollno,name,address");
	rollno=ob.nextInt();
	name=ob.next();
	address=ob.next();
}
void display()
{
	System.out.println("The rollno is "+rollno);
	System.out.println("The name is "+name);
	System.out.println("The address is "+address);
	}
public static void main(String[] args) {
	First obj=new First();
	obj.input();  //accessing the methods with the help of object
	obj.display();
}
}

---------------------------------- 
wap to enter employee data
1)empno
2)name
3)salary
4)designation
5)dept
and display the data.
-------------------------------------------------------------
wap to enter bank details (use case and switch)
accno,name,balance
enter 1.withdraw 2.deposite
if withdraw less then balance.then final balance =balance-withdraw.
if withdraw more then balance.then display message ("sorry cannot withdraw");
for deposite final balnace =balance+deposite
-----------------------------------------------------------------------------------------------------------
example-1
-------------------
//wap to enter employee data 1)empno 2)name 3)salary 4)designation 5)dept and display the data.
package org.sandip;
import java.util.*;
public class Employee 
{
int empno;
String name,design,dept;
float salary;
void input()
{
	Scanner ob=new Scanner(System.in);
	System.out.println("Enter empno,name,designation,dept and salary");
	empno=ob.nextInt();
	name=ob.next();
	design=ob.next();
	dept=ob.next();
	salary=ob.nextFloat();
}
void display()
{
	System.out.println("The empno is"+empno);
	System.out.println("The name is"+name);
	System.out.println("The design is"+design);
	System.out.println("The dept is"+dept);
	System.out.println("The salary is"+salary);
	
}
public static void main(String[] args) 
{
Employee ob=new Employee();
ob.input();
ob.display();
}
}
----------------------------------------------------------------------------------------
example-2
-------------------------
package org.sandip;
import java.util.*;
public class Bank 
{
public static void main(String[] args) 
{
	Scanner ob=new Scanner(System.in);
	System.out.println("Enter accno,name,Balance");
	int accno=ob.nextInt();
	String name=ob.next();
	Float bal=ob.nextFloat();
	System.out.println("Enter 1.Withdraw 2.deposite");
	int choice=ob.nextInt();
	switch(choice)
	{
	case 1:System.out.println("Enter amount to withdraw");
	float withd=ob.nextFloat();
	if(bal>withd)
	{
		bal=bal-withd;
		System.out.println("The final balance is "+bal);
	}
	else
		System.out.println("Sorry balance is less");
	
	break;
	case 2:System.out.println("Enter amount to deposite");
	float dip=ob.nextFloat();
	bal=bal+dip;
	System.out.println("The final balance is "+bal);
	break;
	default:System.out.println("wrong input");
}
}
}
----------------------------------------------------------------------------------------------
Constructor :- It is a function which has the same name of that of the class name.
It doesnot return any value nor it has any return type.
It execute automatically when an object is created for the class.
there are 2 types of constructor
1)default constructor
2)parameterized constructor.
--------------------------------------------------------------
example-1
-------------------
package org.sandip;
public class Student 
{
int rollno; //instance variable can be accessed through out the class.
String name,address;
Student()
{
	System.out.println("This is default constructor");
}
Student(int rollno,String name,String address)//local variables can be accessed within the function
{
	this.rollno=rollno; //to differentiate between the instance and local variables we use this keyword.
	this.name=name;
	this.address=address;
}
void display()
{
	System.out.println("the rollno is "+rollno);
	System.out.println("the name is "+name);
	System.out.println("the address is "+address);
	}
public static void main(String[] args) {
	Student ob=new Student();
	Student ob1=new Student(101,"sandip","Bangalore");
	ob1.display();
	}
}
------------------------------------------------------------------------------------------------------
wap using constructor to enter employee data and display it.
empno,name,salary,design
-------------------------------------------------------------------
example-
package org.sandip;
import java.util.*;
public class Employee 
{
int empno;
String name,design,dept;
float salary;
Employee(int empno,String name,String design,String dept,float salary)
{
	this.empno=empno;
	this.name=name;
	this.design=design;
	this.dept=dept;
	this.salary=salary;
}
void display()
{
	System.out.println("The empno is "+empno);
	System.out.println("The name is "+name);
	System.out.println("The design is "+design);
	System.out.println("The dept is "+dept);
	System.out.println("The salary is "+salary);
}
public static void main(String[] args) 
{
Employee ob=new Employee(101,"sandip","officer","sales",7800.34f);
ob.display();
}
}
-----------------------------------------------------------------------------------------------------
Difference between function and Constructor
-----------------------------------------------------------------
1)A function returns a value where as the constructor doesn't return a value.
2)A function can have any name other than the class name.A constructor only have 
the class name.
3)For executing (n) no of function we require single object where as for excecuting a 
single constructor we require single object.
as many constructor that many objects are required.
4)when we use the same function name more than one time it is known as function overloading.
--------------------------------------------------------------------------------------------
example-
package org.sandip;
import java.util.*;
public class Employee 
{
int empno;
String name,design,dept;
float salary;
Employee(int empno,String name,String design,String dept,float salary)
{
	this.empno=empno;
	this.name=name;
	this.design=design;
	this.dept=dept;
	this.salary=salary;
}
int sum(int a ,int b)
{
return a+b;
}

float sum(float a,float b)
{
	return a+b;
}

void display()
{
	System.out.println("The empno is "+empno);
	System.out.println("The name is "+name);
	System.out.println("The design is "+design);
	System.out.println("The dept is "+dept);
	System.out.println("The salary is "+salary);
	
}
public static void main(String[] args) 
{
Employee ob=new Employee(101,"sandip","officer","sales",7800.34f);
ob.display();
System.out.println("the sum of 2 nos are "+ob.sum(6, 6));
System.out.println("the sum of 2 nos are "+ob.sum(6.54f, 6.43f));
System.out.println("the sum of 2 nos are "+ob.sum(16, 26));
}
}
-----------------------------------------------------------------------------------
Inheritance :-It is one of the properties of Object Oriented Programing language.
In this the child class will inherite the parent class variables and methods.
We can reuse the parent class code in the child class and create a new version.
Java support 1)single inheritance.2)multi-level inheritance 3)hyrarchal inheritance.
we use the keyword super to access the parent class variables and methods.
we use the keyword extends to inherite the parent class into the child class.
we have to create object of the child class and access the variables and methods of the parent and child class both.
*java does not support multiple and hybrid inhertance
*multiple and hybrid inhertance we will do using interface.
*first the super class constructor will execute then the child class constructor will execute.
-----------------------------------------------------------------------------

Polymerphisim
Encalsulation
Abstraction
-------------------------------------------------------------------------------------
example-1
------------------------
package org.inheritance;

public class Student 
{
int rollno;
String name,address;
public Student(int rollno, String name, String address) {
	this.rollno = rollno;
	this.name = name;
	this.address = address;
}
void display()
{
	System.out.println("the rollno is "+rollno);
	System.out.println("the name is "+name);
	System.out.println("the address is "+address);
	}
}
---------------------------------------------------------------------------------------
package org.inheritance;

public class InheritanceDemo extends Student 
{
	int phy,chem,maths,total;

	public InheritanceDemo(int rollno, String name, String address, int phy, int chem, int maths) {
		super(rollno, name, address);
		this.phy = phy;
		this.chem = chem;
		this.maths = maths;
	}
	void display()
	{
		super.display();
		System.out.println("the physics marks is "+phy );
		System.out.println("the chemistry marks is "+chem );
		System.out.println("the maths marks is "+maths );
		System.out.println("the total marks is "+(phy+chem+maths));
				}
public static void main(String[] args) {
	InheritanceDemo ob=new InheritanceDemo(101,"sandip","bangalore",66,77,49);
	ob.display();
}
}
-------------------------------------------------------------------------------------------------------------
amazon
------------------
parent---->Create a product class (pid,name,price)
child ----->create a customer class inherite the product class (cusname,address,emailid,phoeneno);
display the data.
create object of the child class and display the data.
----------------------------------------------------------------------------------------------------------
















